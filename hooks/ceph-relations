#!/bin/sh

set -uex

home=`dirname $0`
. $home/ceph-common.sh

name=`basename $0`
if [ "$name" = "config-changed" ] ; then
    relation="config-changed"
    event="config-changed"
else
    relation=${name%%-relation-*}
    event=${name##*-relation-}
fi

# this is used to determine ids from the configs, so it does need
# to be hostname and not private-address
HOSTNAME=`hostname`

if [ "$event" = "joined" ] ; then
    case $relation in
    ssh)
        send_ssh_key
        ;;
    *)
        relation-set hostname=`hostname`
    ;;
    esac
fi

case $relation in
config-changed)
    ;;
ssh)
    if [ -z "`relation-get ssh-key`" ] ; then
        juju-log "ssh-key not set yet"
        exit 0
    fi
    ;;
client)
    ;;
*)
    case $event in
    departed|broken)
        ;;
    *)
        if [ -z "`relation-get hostname`" ] ; then
            juju-log "hostname not set yet"
            exit 0
        fi
    esac
    ;;
esac

new_config=`mktemp /etc/ceph/.new-config.XXXXX`

# If I am the "master", make sure we have .ssh/id_xxx keys for all slaves
# relation-set key content

journal_size=`config-get osd-journal-size`

cat > $new_config <<EOF
[mon]
    mon data = /mnt/mon\$id

[mds]
    keyring = /mnt/keyring.\$name

[osd]
    osd data = /mnt/osd\$id
    osd journal = /mnt/osd\$id/journal
    osd journal size = $journal_size

EOF

case $relation in
config-changed)
    run_mds && generate_mds_conf mds-local $JUJU_UNIT_NAME || :
    run_osd && generate_osd_conf osd-local $JUJU_UNIT_NAME || :
    run_mon && generate_mon_conf mon-local $JUJU_UNIT_NAME || :
    ;;
ssh|ssh-remote)
    save_ssh_key
    ;;
mds)
    generate_mds_conf mds
    ;;
osd)
    generate_osd_conf osd
    ;;
mon)
    generate_mon_conf mon
    ;;
mds-remote)
    if run_mds ; then
        juju-log -l ERROR "Cannot relate mds to mds ring"
        exit 1
    fi
    generate_mds_conf mds-remote
    ;;
osd-remote)
    if run_osd ; then
        juju-log -l ERROR "Cannot relate osd to osd ring"
        exit 1
    fi
    generate_osd_conf osd-remote
    ;;
mon-remote)
    if run_mon ; then
        juju-log -l ERROR "Cannot relate mon to mon ring"
        exit 1
    fi
    generate_mon_conf mon-remote
    ;;
*)
    juju-log -l ERROR invalid relation $relation called
    ;;
esac
    
regen_ssh_config
regen_rados_config

run_osd && append_config /etc/ceph/osd.conf.partial $new_config || :
run_mds && append_config /etc/ceph/mds.conf.partial $new_config || :
run_mon && append_config /etc/ceph/mon.conf.partial $new_config || :
[ ! -f /etc/ceph/mds-remote.conf.partial ] || append_config /etc/ceph/mds-remote.conf.partial $new_config
[ ! -f /etc/ceph/osd-remote.conf.partial ] || append_config /etc/ceph/osd-remote.conf.partial $new_config
[ ! -f /etc/ceph/mon-remote.conf.partial ] || append_config /etc/ceph/mon-remote.conf.partial $new_config
[ ! -f /etc/ceph/mds-local.conf.partial ] || append_config /etc/ceph/mds-local.conf.partial $new_config
[ ! -f /etc/ceph/osd-local.conf.partial ] || append_config /etc/ceph/osd-local.conf.partial $new_config
[ ! -f /etc/ceph/mon-local.conf.partial ] || append_config /etc/ceph/mon-local.conf.partial $new_config

chgrp www-data $new_config
chmod g+r $new_config

if swap_config /etc/ceph/ceph.conf $new_config ; then

    case $relation in
    client)
        relation-set ceph-config="`base64 /etc/ceph/ceph.conf`"
        ;;
    esac

    service ceph restart || juju-log "Service could not be started"
fi

if run_mon ; then
    bootstrap_mon
    case $relation in
    mon|mon-remote)
        case $event in
        joined|changed)
            add_mon
            ;;
        departed|broken)
            remove_mon
            ;;
        esac
    esac
    start_mon
fi

# Just keep trying these till they succeeed, since
# our SSH keys may or may not be distributed everywhere yet
if [ -f /etc/ceph/rsyncs ] ; then
    retries=`mktemp /etc/ceph/rsyncs.retries.XXXXXX`
    sort -u /etc/ceph/rsyncs | ( while read rsync_line ; do
        rsync -a $rsync_line || echo $rsync_line >> $retries
    done)
    rm /etc/ceph/rsyncs
    [ -z "`cat $retries`" ] || mv -f $retries /etc/ceph/rsyncs
fi
