#!/bin/sh

set -uex

home=`dirname $0`
. $home/ceph-common.sh

name=`basename $0`
if [ "$name" = "config-changed" ] ; then
    relation="config-changed"
    event="config-changed"
else
    relation=${name%%-relation-*}
    event=${name##*-relation-}
fi

# this is used to determine ids from the configs, so it does need
# to be hostname and not private-address
HOSTNAME=`hostname`

if [ "$event" = "joined" ] ; then
    case $relation in
    ssh)
        send_ssh_key
        ;;
    *)
        relation-set hostname=`hostname`
    ;;
    esac
fi

case $relation in
config-changed)
    ;;
ssh)
    if [ -z "`relation-get ssh-key`" ] ; then
        juju-log "ssh-key not set yet"
        exit 0
    fi
    ;;
client)
    ;;
*)
    if [ -z "`relation-get hostname`" ] ; then
        juju-log "hostname not set yet"
        exit 0
    fi
    ;;
esac

new_config=`mktemp /etc/ceph/.new-config.XXXXX`

# If I am the "master", make sure we have .ssh/id_xxx keys for all slaves
# relation-set key content

journal_size=`config-get osd-journal-size`

cat > $new_config <<EOF
[mon]
    mon data = /mnt/mon\$id

[mds]
    keyring = /mnt/keyring.\$name

[osd]
    osd data = /mnt/osd\$id
    osd journal = /mnt/osd\$id/journal
    osd journal size = $journal_size

EOF

case $relation in
config-changed)
    ;;
ssh|ssh-remote)
    save_ssh_key
    ;;
mds)
    generate_mds_conf
    ;;
osd)
    generate_osd_conf
    ;;
mon)
    generate_mon_conf
    ;;
*)
    juju-log -l ERROR invalid relation $relation called
    ;;
esac
    
regen_ssh_config
regen_rados_config

[ ! "`config-get run-osd`" = "yes" ] || append_config /etc/ceph/osd.conf.partial $new_config
[ ! "`config-get run-mds`" = "yes" ] || append_config /etc/ceph/mds.conf.partial $new_config
[ ! "`config-get run-mon`" = "yes" ] || append_config /etc/ceph/mon.conf.partial $new_config

chgrp www-data $new_config
chmod g+r $new_config

swap_config /etc/ceph/ceph.conf $new_config

case $relation in
client)
    relation-set ceph-config="`base64 /etc/ceph/ceph.conf`"
    ;;
esac

service ceph restart || juju-log "Service could not be started"
